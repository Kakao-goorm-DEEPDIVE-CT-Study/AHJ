<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="com.obiscr.chatgpt.settings.EasyCodeState">
    <option name="projectFiles" value="$PROJECT_DIR$/src/main/java/com/example/exp1/ClassA.java;/Users/ahnhyeongjun/Goorm/Spring/SpringExp/src/main/java/com/example/exp1/ClassB.java;/Users/ahnhyeongjun/Goorm/Spring/SpringExp/src/main/java/com/example/exp1/MainApp.java;/Users/ahnhyeongjun/Goorm/Spring/SpringExp/src/main/java/com/example/exp2/AppConfig.java;/Users/ahnhyeongjun/Goorm/Spring/SpringExp/src/main/java/com/example/exp2/MainAppAppConfig.java;/Users/ahnhyeongjun/Goorm/Spring/SpringExp/src/main/java/com/example/exp2/MainAppXml.java;/Users/ahnhyeongjun/Goorm/Spring/SpringExp/src/main/java/com/example/exp2/ProtoType.java;/Users/ahnhyeongjun/Goorm/Spring/SpringExp/src/main/java/com/example/exp2/SingleTon.java;/Users/ahnhyeongjun/Goorm/Spring/SpringExp/src/main/java/com/example/exp3/Control.java;/Users/ahnhyeongjun/Goorm/Spring/SpringExp/src/main/java/com/example/exp3/MainApp.java;/Users/ahnhyeongjun/Goorm/Spring/SpringExp/src/main/java/com/example/exp3/ServiceAutoWired.java;/Users/ahnhyeongjun/Goorm/Spring/SpringExp/src/main/java/com/example/exp3/ServiceInject.java;/Users/ahnhyeongjun/Goorm/Spring/SpringExp/src/main/resources/application.xml;/Users/ahnhyeongjun/Goorm/Spring/SpringExp/src/main/webapp/WEB-INF/web.xml;/Users/ahnhyeongjun/Goorm/Spring/SpringExp/pom.xml" />
    <option name="forceFullIndex" value="false" />
    <option name="fileSummaryMaps" value="{&quot;/Users/ahnhyeongjun/Goorm/Spring/SpringExp&quot;:&quot;{\&quot;/src/main/webapp/WEB-INF/web.xml\&quot;:\&quot;This file appears to be a web application deployment descriptor, which is an XML file that describes the components of a web application and how they should be deployed. It does not contain any classes or functions, but rather provides configuration information for the web application.\\n\\nThe key elements in this file are:\\n\\n`web-app`: This is the root element of the web application deployment descriptor, which defines the overall structure and configuration of the web application.\\n\\n`display-name`: This element specifies the display name of the web application, which is \\\&quot;Archetype Created Web Application\\\&quot; in this case.\\n\\nIn summary, this file sets up the basic structure and configuration for a web application, but does not contain any specific implementation details or functionality.\&quot;,\&quot;/src/main/java/com/example/exp3/ServiceAutoWired.java\&quot;:\&quot;This file contains a single class and one function.\\n\\n`ServiceAutoWired`: This class is a Spring Service component that provides a logging functionality.\\n\\n`log()`: This function prints the message \\\&quot;ServiceAutoWired.log\\\&quot; to the console.\&quot;,\&quot;/src/main/java/com/example/exp2/MainAppAppConfig.java\&quot;:\&quot;This file is the main application class that demonstrates the usage of singleton and prototype bean scopes in a Spring application.\\n\\n`MainAppAppConfig`: This class is the main entry point of the application, which creates the Spring application context and retrieves the singleton and prototype beans to demonstrate their behavior.\\n\\n`addCount()`: This function increments the count of the bean instance.\\n\\n`getCount()`: This function returns the current count of the bean instance.\&quot;,\&quot;/src/main/java/com/example/exp2/ProtoType.java\&quot;:\&quot;`ProtoType`: A class that represents a prototype object with a count variable and methods to increment and retrieve the count.\\n\\n`ProtoType()`: A static method that prints \\\&quot;new ProtoType\\\&quot; when called.\\n\\n`addCount()`: A method that increments the count variable of the `ProtoType` object.\\n\\n`getCount()`: A method that returns the current value of the count variable of the `ProtoType` object.\&quot;,\&quot;/src/main/java/com/example/exp1/ClassB.java\&quot;:\&quot;`ClassB`: A class that holds a reference to an instance of `ClassA` and provides a method to print information about the `ClassA` instance.\\n\\n`setClassA`: A method that sets the `ClassA` instance associated with the `ClassB` instance.\\n\\n`printClassInfo`: A method that prints the `ClassA` instance associated with the `ClassB` instance.\&quot;,\&quot;/src/main/java/com/example/exp2/SingleTon.java\&quot;:\&quot;`SingleTon`: A class that represents a singleton object with a count variable.\\n\\n`SingleTon()`: A constructor that prints \\\&quot;new SingleTon\\\&quot; when a new instance of the `SingleTon` class is created.\\n\\n`addCount()`: A method that increments the `count` variable by 1.\\n\\n`getCount()`: A method that returns the current value of the `count` variable.\&quot;,\&quot;/src/main/java/com/example/exp2/AppConfig.java\&quot;:\&quot;This file defines the configuration for a Spring application, which includes the creation of two bean definitions: `SingleTon` and `ProtoType`.\\n\\n`AppConfig`: This class is a Spring configuration class that defines the beans to be created in the application context.\\n\\n`singleTon()`: This method creates a bean of type `SingleTon` with the scope set to \\\&quot;singleton\\\&quot;, meaning there will be only one instance of this bean in the application context.\\n\\n`protoType()`: This method creates a bean of type `ProtoType` with the scope set to \\\&quot;prototype\\\&quot;, meaning a new instance of this bean will be created each time it is requested.\&quot;,\&quot;/src/main/java/com/example/exp2/MainAppXml.java\&quot;:\&quot;This file is a Spring application that demonstrates the behavior of singleton and prototype bean scopes.\\n\\n`MainAppXml`: This class is the main entry point of the application, which creates the Spring application context and retrieves the singleton and prototype beans.\\n\\n`SingleTon`: This class represents a singleton bean, which is a single instance shared across the application.\\n\\n`ProtoType`: This class represents a prototype bean, which is a new instance created each time it is requested.\\n\\nThe `main()` method in the `MainAppXml` class creates the Spring application context, retrieves the singleton and prototype beans, and demonstrates their behavior by adding a count and printing the results.\&quot;,\&quot;/src/main/java/com/example/exp3/Control.java\&quot;:\&quot;`Control`: A Spring MVC controller class that uses both `@Autowired` and `@Inject` to inject two service classes.\\n\\n`runService()`: A method that calls the `log()` method on both the `serviceAutoWired` and `serviceInject` objects.\\n\\nThis file defines a Spring MVC controller class named `Control` that demonstrates the use of both `@Autowired` and `@Inject` annotations to inject two service classes, `ServiceAutoWired` and `ServiceInject`, respectively. The `runService()` method in the `Control` class calls the `log()` method on both the injected service objects.\&quot;,\&quot;/src/main/resources/application.xml\&quot;:\&quot;This file is a Spring XML configuration file that defines several beans and their dependencies.\\n\\n`ClassA`: A class that is instantiated as a bean with the ID \\\&quot;classA\\\&quot;.\\n\\n`ClassB`: A class that is instantiated as a bean with the ID \\\&quot;classB\\\&quot; and has a dependency on the \\\&quot;classA\\\&quot; bean.\\n\\n`SingleTon`: A class that is instantiated as a bean with the ID \\\&quot;singleton\\\&quot; and has a singleton scope, meaning only one instance of the bean will be created.\\n\\n`ProtoType`: A class that is instantiated as a bean with the ID \\\&quot;prototype\\\&quot; and has a prototype scope, meaning a new instance of the bean will be created each time it is requested.\\n\\nThe purpose of this file is to configure the Spring application context and define the beans that will be used in the application, along with their dependencies and scopes.\&quot;,\&quot;/pom.xml\&quot;:\&quot;This file is a Maven project configuration file (pom.xml) for a Spring-based web application named \\\&quot;SpringExp\\\&quot;. It defines the project\\u0027s dependencies, including the Spring context and the javax.inject library, as well as the project\\u0027s packaging and build settings.\\n\\nThe file does not contain any classes or functions. Instead, it serves as a configuration file for the Maven build tool, which is used to manage the project\\u0027s dependencies and build process.\&quot;,\&quot;/src/main/java/com/example/exp1/MainApp.java\&quot;:\&quot;This file appears to be a Spring application that demonstrates the use of the Spring container to manage the lifecycle of two classes, `ClassA` and `ClassB`.\\n\\n`MainApp`: This class is the entry point of the application, which creates an instance of the Spring `ApplicationContext` and retrieves the instances of `ClassA` and `ClassB` from the container, then calls their respective `printClassInfo()` methods.\\n\\n`ClassA`: This class is likely a Spring-managed bean that performs some specific functionality, and its details are not provided in the given code snippet.\\n\\n`ClassB`: This class is likely another Spring-managed bean that performs some specific functionality, and its details are also not provided in the given code snippet.\&quot;,\&quot;/src/main/java/com/example/exp3/ServiceInject.java\&quot;:\&quot;This file contains a single class and one function.\\n\\n`ServiceInject`: A service class that provides a logging functionality.\\n\\n`log()`: Prints the message \\\&quot;ServiceInject.log\\\&quot; to the console.\&quot;,\&quot;/src/main/java/com/example/exp3/MainApp.java\&quot;:\&quot;This file appears to be a Spring Boot application that uses dependency injection to run a service. It does not contain any classes or functions, but rather a single `@Component` annotated class called `MainApp` that has a static `@Autowired` field called `control`.\\n\\n`MainApp`: This is the main entry point of the Spring Boot application, which uses dependency injection to access a `Control` object and calls its `runService()` method.\&quot;,\&quot;/src/main/java/com/example/exp1/ClassA.java\&quot;:\&quot;`ClassA`: A class that contains a method to print the string \\\&quot;classA\\\&quot;.\\n\\n`printClassInfo()`: A method that prints the string \\\&quot;classA\\\&quot; to the console.\&quot;}&quot;}" />
    <option name="fileSkeletonMaps" value="{&quot;/Users/ahnhyeongjun/Goorm/Spring/SpringExp&quot;:&quot;{\&quot;/src/main/java/com/example/exp1/ClassA.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/com/example/exp1/ClassA.java\&quot;,\&quot;file_name\&quot;:\&quot;ClassA.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;printClassInfo\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,4],[6,5]]}]},\&quot;/src/main/java/com/example/exp1/ClassB.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/com/example/exp1/ClassB.java\&quot;,\&quot;file_name\&quot;:\&quot;ClassB.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;setClassA\&quot;,\&quot;method_parameters\&quot;:\&quot;(ClassA classA)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;ClassA\&quot;,\&quot;name\&quot;:\&quot;classA\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[7,5]]},{\&quot;method_name\&quot;:\&quot;printClassInfo\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[8,4],[10,5]]}]},\&quot;/src/main/java/com/example/exp1/MainApp.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/com/example/exp1/MainApp.java\&quot;,\&quot;file_name\&quot;:\&quot;MainApp.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[14,5]]}]},\&quot;/src/main/java/com/example/exp2/AppConfig.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/com/example/exp2/AppConfig.java\&quot;,\&quot;file_name\&quot;:\&quot;AppConfig.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;singleTon\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;SingleTon\&quot;,\&quot;scope\&quot;:[[8,4],[12,5]]},{\&quot;method_name\&quot;:\&quot;protoType\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;ProtoType\&quot;,\&quot;scope\&quot;:[[14,4],[18,5]]}]},\&quot;/src/main/java/com/example/exp2/MainAppAppConfig.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/com/example/exp2/MainAppAppConfig.java\&quot;,\&quot;file_name\&quot;:\&quot;MainAppAppConfig.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[25,5]]}]},\&quot;/src/main/java/com/example/exp2/MainAppXml.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/com/example/exp2/MainAppXml.java\&quot;,\&quot;file_name\&quot;:\&quot;MainAppXml.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[29,5]]}]},\&quot;/src/main/java/com/example/exp2/ProtoType.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/com/example/exp2/ProtoType.java\&quot;,\&quot;file_name\&quot;:\&quot;ProtoType.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;ProtoType\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,4],[6,5]]},{\&quot;method_name\&quot;:\&quot;addCount\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[9,5]]},{\&quot;method_name\&quot;:\&quot;getCount\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[10,4],[12,5]]}]},\&quot;/src/main/java/com/example/exp2/SingleTon.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/com/example/exp2/SingleTon.java\&quot;,\&quot;file_name\&quot;:\&quot;SingleTon.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;SingleTon\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,4],[6,5]]},{\&quot;method_name\&quot;:\&quot;addCount\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[9,5]]},{\&quot;method_name\&quot;:\&quot;getCount\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[10,4],[12,5]]}]},\&quot;/src/main/java/com/example/exp3/Control.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/com/example/exp3/Control.java\&quot;,\&quot;file_name\&quot;:\&quot;Control.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;runService\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[14,4],[17,5]]}]},\&quot;/src/main/java/com/example/exp3/MainApp.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/com/example/exp3/MainApp.java\&quot;,\&quot;file_name\&quot;:\&quot;MainApp.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[11,4],[13,5]]}]},\&quot;/src/main/java/com/example/exp3/ServiceAutoWired.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/com/example/exp3/ServiceAutoWired.java\&quot;,\&quot;file_name\&quot;:\&quot;ServiceAutoWired.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;log\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[8,5]]}]},\&quot;/src/main/java/com/example/exp3/ServiceInject.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/com/example/exp3/ServiceInject.java\&quot;,\&quot;file_name\&quot;:\&quot;ServiceInject.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;log\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[8,5]]}]},\&quot;/src/main/resources/application.xml\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/resources/application.xml\&quot;,\&quot;file_name\&quot;:\&quot;application.xml\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/webapp/WEB-INF/web.xml\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/webapp/WEB-INF/web.xml\&quot;,\&quot;file_name\&quot;:\&quot;web.xml\&quot;,\&quot;methods\&quot;:[]},\&quot;/pom.xml\&quot;:{\&quot;file_path\&quot;:\&quot;/pom.xml\&quot;,\&quot;file_name\&quot;:\&quot;pom.xml\&quot;,\&quot;methods\&quot;:[]}}&quot;}" />
  </component>
</project>